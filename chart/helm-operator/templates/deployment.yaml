apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "helm-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "helm-operator.name" . }}
    chart: {{ template "helm-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "helm-operator.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type:  Recreate
  template:
    metadata:
      annotations:
        checksum/repositories: {{ include (print $.Template.BasePath "/helm-repositories.yaml") . | sha256sum | quote }}
      {{- if .Values.git.ssh.known_hosts }}
        checksum/ssh: {{ include (print $.Template.BasePath "/ssh.yaml") . | sha256sum | quote }}
      {{- end }}
      {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: "true"
      {{- end }}
      {{- if .Values.podAnnotations }}
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "helm-operator.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podLabels }}
      {{- range $key, $value := .Values.podLabels }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      serviceAccountName: {{ template "helm-operator.serviceAccountName" . }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.kube.config }}
      - name: config
        configMap:
          name: {{ template "helm-operator.fullname" . }}-kube-config
          defaultMode: 0600
      {{- end }}
      {{- if .Values.git.ssh.known_hosts }}
      - name: sshknownhosts
        configMap:
          name: {{ template "helm-operator.fullname" . }}-ssh-config
          defaultMode: 0600
      {{- end }}
      {{- if .Values.git.config.enabled }}
      - name: git-config
        secret:
          secretName: {{ include "git.config.secretName" . }}
          defaultMode: 0400
      {{- end }}
      {{- if .Values.git.ssh.configMapName }}
      - name: sshconfig
        configMap:
          name: {{ .Values.git.ssh.configMapName }}
          items:
            - key: {{ .Values.git.ssh.configMapKey | default "config" }}
              path: config
          defaultMode: 0400
      {{- end }}
      - name: git-key
        secret:
          {{- if .Values.git.ssh.secretName }}
          secretName: {{ .Values.git.ssh.secretName }}
          {{- else }}
          secretName: {{ template "helm-operator.fullname" . }}-git-deploy
          {{- end }}
          defaultMode: 0400
      {{- if .Values.tls.enable }}
      - name: helm-tls-certs
        secret:
          secretName: {{ .Values.tls.secretName }}
          defaultMode: 0400
      {{- if .Values.tls.verify }}
      - name: helm-tls-ca
        configMap:
          name: {{ template "helm-operator.fullname" . }}-helm-tls-ca-config
          defaultMode: 0600
      {{- end }}
      {{- end }}
      {{- if .Values.configureRepositories.enable }}
      - name: {{ .Values.configureRepositories.volumeName | quote }}
        secret:
          secretName: {{ .Values.configureRepositories.secretName | quote }}
      - name: {{ .Values.configureRepositories.cacheVolumeName | quote }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.initPlugins.enable }}
      - name: {{ .Values.initPlugins.cacheVolumeName | quote }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 6 }}
      {{- end }}
{{- if or .Values.initContainers .Values.initPlugins.enable }}
      initContainers:
{{- if .Values.initContainers }}
{{ toYaml .Values.initContainers | indent 6 }}
{{- end }}
{{- if .Values.initPlugins.enable }}
{{- include "helm-operator.initPlugins" . | indent 6 }}
{{- end }}
{{- end }}
      containers:
      - name: flux-helm-operator
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.containerSecurityContext.helmOperator }}
        securityContext:
{{ toYaml .Values.containerSecurityContext.helmOperator | indent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 3030
        livenessProbe:
          httpGet:
            port: 3030
            path: /healthz
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            port: 3030
            path: /healthz
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        volumeMounts:
        {{- if .Values.kube.config }}
        - name: config
          mountPath: /root/.kube
          readOnly: true
        {{- end }}
        {{- if .Values.git.ssh.known_hosts }}
        - name: sshknownhosts
          mountPath: /root/.ssh/known_hosts
          subPath: known_hosts
          readOnly: true
        {{- end }}
        {{- if .Values.git.ssh.configMapName }}
        - name: sshconfig
          mountPath: /root/.ssh/
          readOnly: true
        {{- end }}
        {{- if .Values.git.config.enabled }}
        - name: git-config
          mountPath: /root/.gitconfig
          subPath: gitconfig
          readOnly: true
        {{- end }}
        - name: git-key
          mountPath: /etc/fluxd/ssh
          readOnly: true
        {{- if .Values.tls.enable }}
        - name: helm-tls-certs
          mountPath: /etc/fluxd/helm
          readOnly: true
        {{- if .Values.tls.verify }}
        - name: helm-tls-ca
          mountPath: /etc/fluxd/helm-ca
          readOnly: true
        {{- end }}
        {{- end }}
        {{- if .Values.configureRepositories.enable }}
        - name: {{ .Values.configureRepositories.volumeName | quote }}
          mountPath: /root/.helm/repository/repositories.yaml
          subPath: repositories.yaml
          readOnly: true
        {{- if contains "v2" .Values.helm.versions }}
        - name: {{ .Values.configureRepositories.cacheVolumeName | quote }}
          mountPath: /var/fluxd/helm/repository/cache
          subPath: v2
        {{- end }}
        {{- if contains "v3" .Values.helm.versions }}
        - name: {{ .Values.configureRepositories.cacheVolumeName | quote }}
          mountPath: /root/.cache/helm/repository
          subPath: v3
        {{- end }}
        {{- end }}
        {{- if .Values.initPlugins.enable }}
        {{- if contains "v2" .Values.helm.versions }}
        - name: {{ .Values.initPlugins.cacheVolumeName | quote }}
          mountPath: /var/fluxd/helm/cache/plugins/
          subPath: v2
        - name: {{ .Values.initPlugins.cacheVolumeName | quote }}
          mountPath: /var/fluxd/helm/plugins
          subPath: v2-config
        {{- end }}
        {{- if contains "v3" .Values.helm.versions }}
        - name: {{ .Values.initPlugins.cacheVolumeName | quote }}
          mountPath: /root/.cache/helm/plugins
          subPath: v3
        - name: {{ .Values.initPlugins.cacheVolumeName | quote }}
          mountPath: /root/.local/share/helm/plugins
          subPath: v3-config
        {{- end }}
        {{- end }}
        {{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
        {{- end }}
        args:
        {{- if .Values.helm.versions }}
        - --enabled-helm-versions={{ .Values.helm.versions }}
        {{- if .Values.configureRepositories.enable }}
        {{- range $version := splitList "," .Values.helm.versions }}
        - --helm-repository-import={{ $version }}:/root/.helm/repository/repositories.yaml
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.kube.config }}
        - --kubeconfig=/root/.kube/config
        {{- end }}
        {{- if .Values.logFormat }}
        - --log-format={{ .Values.logFormat }}
        {{- end }}
        - --git-timeout={{ .Values.git.timeout }}
        - --git-poll-interval={{ .Values.git.pollInterval }}
        {{- if .Values.git.defaultRef }}
        - --git-default-ref={{ .Values.git.defaultRef }}
        {{- end }}
        - --charts-sync-interval={{ .Values.chartsSyncInterval }}
        {{- if .Values.statusUpdateInterval }}
        - --status-update-interval={{ .Values.statusUpdateInterval }}
        {{- end }}
        - --update-chart-deps={{ .Values.updateChartDeps }}
        - --log-release-diffs={{ .Values.logReleaseDiffs }}
        {{- if .Values.workers }}
        - --workers={{ .Values.workers }}
        {{- end }}
        {{- if not .Values.clusterRole.create }}
        - --allow-namespace={{ .Release.Namespace }}
        {{- else if .Values.allowNamespace }}
        - --allow-namespace={{ .Values.allowNamespace }}
        {{- end }}
        {{- if .Values.tillerSidecar.enabled }}
        - --tiller-ip=localhost
        - --tiller-port=44134
        {{- else }}
        {{- if .Values.tillerHost }}
        - --tiller-ip={{ .Values.tillerHost }}
        - --tiller-port={{ .Values.tillerPort }}
        {{- else }}
        - --tiller-namespace={{ .Values.tillerNamespace }}
        {{- end }}
        {{- if .Values.convert.releaseStorage }}
        - --convert-release-storage={{ .Values.convert.releaseStorage }}
        {{- end }}
        {{- if .Values.convert.tillerOutCluster }}
        - --convert-tiller-out-cluster={{ .Values.convert.tillerOutCluster }}
        {{- end }}
        {{- if .Values.tls.enable }}
        - --tiller-tls-enable={{ .Values.tls.enable }}
        - --tiller-tls-key-path=/etc/fluxd/helm/{{ .Values.tls.keyFile }}
        - --tiller-tls-cert-path=/etc/fluxd/helm/{{ .Values.tls.certFile }}
        {{- if .Values.tls.verify }}
        - --tiller-tls-verify={{ .Values.tls.verify }}
        - --tiller-tls-ca-cert-path=/etc/fluxd/helm-ca/ca.crt
        {{- if .Values.tls.hostname }}
        - --tiller-tls-hostname={{ .Values.tls.hostname }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
      {{- if .Values.extraEnvs }}
        env:
{{ toYaml .Values.extraEnvs | indent 8 }}
      {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- if .Values.tillerSidecar.enabled }}
      - name: tiller
        image: "{{ .Values.tillerSidecar.image.repository }}:{{ .Values.tillerSidecar.image.tag }}"
        args:
        - --listen=localhost:44134
        - --probe-listen=:44135
        - --storage={{ .Values.tillerSidecar.storage }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.containerSecurityContext.tiller }}
        securityContext:
 {{ toYaml .Values.containerSecurityContext.tiller | indent 10 }}
        {{- end }}
        ports:
        - containerPort: 44135
          name: http
        livenessProbe:
          httpGet:
            path: /liveness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /readiness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
        env:
        - name: TILLER_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: TILLER_HISTORY_MAX
          value: "10"
      {{- end }}
{{- if .Values.sidecarContainers }}
{{- toYaml .Values.sidecarContainers | nindent 6 }}
{{- end }}
{{- if .Values.hostAliases }}
      hostAliases:
{{ toYaml .Values.hostAliases |indent 8 }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      securityContext:
        supplementalGroups:
        - 1
